swagger: "2.0"
info:
  description: ""
  version: 0.0.1
  title: "Pw2"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "petstore.swagger.io"
basePath: "/v2"
tags:
  - name: users
    description: Users
  - name: products
    description: Products
schemes:
  - "https"
  - "http"
paths:
  /users:
    post:
      tags:
        - "users"
      summary: "Add a new user to the store"
      description: ""
      operationId: "addUser"
      consumes:
        - "application/json"
        - "application/xml"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "User object that needs to be added to the store"
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        "201":
          description: "Created"
    get:
      tags:
        - "users"
      summary: "Get all users"
      operationId: "getUsers"
      produces:
        - "application/json"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/User"

  /users/{username}:
    get:
      tags:
        - "users"
      summary: "Find user by username"
      description: "Returns a single user"
      operationId: "getUserByUsername"
      produces:
        - "application/json"
      parameters:
        - name: "username"
          in: "path"
          description: "username of the user to return"
          required: true
          type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/User"
        "404":
          description: "User not found"
    put:
      tags:
        - "users"
      summary: "Updates a user in the store with form data"
      description: ""
      operationId: "updatePetWithForm"
      consumes:
        - "application/x-www-form-urlencoded"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: "username"
          in: "path"
          description: "ID of pet that needs to be updated"
          required: true
          type: "integer"
          format: "int64"
      responses:
        "200":
          description: "Successful update"
    delete:
      tags:
        - "users"
      summary: "Deletes a pet"
      description: ""
      operationId: "deletePet"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: "api_key"
          in: "header"
          required: false
          type: "string"
        - name: "username"
          in: "path"
          description: "Pet id to delete"
          required: true
          type: "integer"
          format: "int64"
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Pet not found"
  /products:
    post:
      tags:
        - "products"
      summary: "Add a new user to the store"
      description: ""
      operationId: "addProduct"
      consumes:
        - "application/json"
        - "application/xml"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "User object that needs to be added to the store"
          required: true
          schema:
            $ref: "#/definitions/Product"
      responses:
        "201":
          description: "Created"
    get:
      tags:
        - "products"
      summary: "Get all products"
      operationId: "getAllProduct"
      produces:
        - "application/json"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Product"

  /products/{productid}:
    get:
      tags:
        - "products"
      summary: Find product by product id
      description: "Returns a single user"
      operationId: "getProductByProductId"
      produces:
        - "application/json"
      parameters:
        - name: "productid"
          in: "path"
          description: "product id of the product to return"
          required: true
          type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Product"
        "404":
          description: "User not found"
    put:
      tags:
        - "products"
      summary: Updates a product in the store with form data
      description: ""
      operationId: "updateProduct"
      consumes:
        - "application/x-www-form-urlencoded"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: "productid"
          in: "path"
          description: "ID of the product that needs to be updated"
          required: true
          type: "string"
      responses:
        "200":
          description: "Successful update"
    delete:
      tags:
        - "products"
      summary: Deletes a product
      description: ""
      operationId: "deleteProduct"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: "productid"
          in: "path"
          description: "Product id to delete"
          required: true
          type: "string"
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Product not found"
definitions:
  User:
    type: "object"
    properties:
      username:
        type: "string"
      password:
        type: "string"
    xml:
      name: "User"
  Product:
    type: "object"
    properties:
      product_id:
        type: "string"
      product_name:
        type: "string"
      price_brl:
        type: "number"
        format: "float64"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
